{"version":3,"sources":["App.tsx","components/phone/index.tsx","components/wrapper/index.tsx","index.tsx","store/index.tsx"],"names":["source","createMemorySource","history","createHistory","createLazyRoute","RouteComponent","props","Suspense","fallback","Home","React","lazy","Favorites","App","className","Fragment","path","to","icon","faHome","faHeart","Phone","children","onClick","alert","Wrapper","this","Component","ReactDOM","render","document","getElementById","initialState","episodes","favorites","Store","createContext","Reducer","state","action","type","payload","_embedded","StoreProvider","useReducer","dispatch","console","log","Provider","value"],"mappings":"mVAeIA,EAASC,YAAmB,+DAC5BC,EAAUC,YAAcH,GAK5B,SAASI,EAA+CC,GACtD,OAAO,SAAUC,GACf,OACE,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,2CACxB,kBAACH,EAAmBC,KAO5B,IAAMG,EAAOL,EACXM,IAAMC,MAAK,kBAAM,wDAEbC,EAAYR,EAChBM,IAAMC,MAAK,kBAAM,wDAkCJE,MA/Bf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,SACb,kBAAC,IAAD,CAAkBZ,QAASA,GACzB,kBAAC,IAAMa,SAAP,KACE,kBAAC,IAAD,KACE,kBAACN,EAAD,CAAMO,KAAI,MACV,kBAACJ,EAAD,CAAWI,KAAI,mBAKvB,yBAAKF,UAAU,UACb,6BACE,kBAAC,IAAD,CAAMG,GAAG,KACP,kBAAC,IAAD,CAAiBC,KAAMC,MACvB,uCAGJ,6BACE,kBAAC,IAAD,CAAMF,GAAG,cACP,kBAAC,IAAD,CAAiBC,KAAME,MACvB,+C,oDC1CGC,MAhBf,YAAgD,IAA/BC,EAA8B,EAA9BA,SACf,OACE,yBAAKR,UAAU,mBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,UACZQ,GAEH,yBAAKR,UAAU,qBACb,4BAAQS,QAAS,kBAAMC,MAAM,iDCKxBC,E,iLAZH,IACAH,EAAaI,KAAKpB,MAAlBgB,SACR,OACE,yBAAKR,UAAU,WACb,kBAAC,EAAD,KACGQ,Q,GANWK,aCGtBC,IAASC,OACP,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEAC,SAASC,eAAe,U,gsBCR5B,IAAMC,EAAuB,CAC3BC,SAAU,GACVC,UAAW,IAGAC,EAAQC,wBAA4BJ,GAEjD,SAASK,IAAgE,IAAxDC,EAAuD,uDAAvCN,EAAcO,EAAyB,uCACtE,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,EAAP,GAAYF,EAAZ,CAAmBL,SAAUM,EAAOE,QAAQC,UAAUT,WACxD,IAAK,UAEL,IAAK,aACH,OAAO,EAAP,GAAYK,EAAZ,CAAmBJ,UAAWK,EAAOE,UACvC,QACE,OAAOH,GAIN,IAAMK,EAAgB,SAAC,GAAuB,IAArBrB,EAAoB,EAApBA,SAAoB,EACxBsB,qBAAWP,EAASL,GADI,mBAC3CM,EAD2C,KACpCO,EADoC,KAGlD,OADAC,QAAQC,IAAI,QAAST,GACd,kBAACH,EAAMa,SAAP,CAAgBC,MAAO,CAAEX,QAAOO,aAAavB,M","file":"static/js/main.dfbe51f3.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Router, Link, RouteComponentProps,\n  createMemorySource,\n  createHistory,\n  LocationProvider\n} from '@reach/router'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faHeart } from '@fortawesome/free-solid-svg-icons'\n\nimport './App.css';\nimport { StoreProvider } from './store/'\n\n// solve routing problem\nlet source = createMemorySource('https://fadilnatakusumah.github.io/rick-and-morty-episodes/');\nlet history = createHistory(source)\n\n// StoreProvider \n\n// Helper for Lazy Route Component problem\nfunction createLazyRoute<T extends RouteComponentProps>(RouteComponent: React.ComponentType<T>) {\n  return function (props: T) {\n    return (\n      <React.Suspense fallback={<h5>Loading...</h5>}>\n        <RouteComponent {...props} />\n      </React.Suspense>\n    );\n  };\n}\n\n// Pages\nconst Home = createLazyRoute(\n  React.lazy(() => import('./pages/Home'))\n);\nconst Favorites = createLazyRoute(\n  React.lazy(() => import('./pages/Favorites'))\n);\n\nfunction App(): JSX.Element {\n  return (\n    <StoreProvider>\n      <div className=\"pages\">\n        <LocationProvider history={history}>\n          <React.Fragment>\n            <Router>\n              <Home path={`/`} />\n              <Favorites path={`/favorites`} />\n            </Router>\n          </React.Fragment>\n        </LocationProvider>\n      </div>\n      <nav className=\"navbar\">\n        <div>\n          <Link to=\"/\">\n            <FontAwesomeIcon icon={faHome} />\n            <div>Home</div>\n          </Link>\n        </div>\n        <div>\n          <Link to=\"/favorites\">\n            <FontAwesomeIcon icon={faHeart} />\n            <div>Favorites</div>\n          </Link>\n        </div>\n      </nav>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","import React from 'react'\n\nimport './index.css'\n\nfunction Phone({ children }: any): JSX.Element {\n  return (\n    <div className=\"phone-container\">\n      <div className=\"phone-case\">\n        <div className=\"speaker\"></div>\n        <div className=\"screen\">\n          {children}\n        </div>\n        <div className=\"buttons-container\">\n          <button onClick={() => alert(\"THIS WEB WAS MADE BY @fadilnatakusumah\")}></button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Phone","import React, { Component } from 'react'\n\nimport './index.css'\nimport Phone from '../phone';\n\nclass Wrapper extends Component<{}> {\n  render() {\n    const { children } = this.props;\n    return (\n      <div className=\"wrapper\">\n        <Phone>\n          {children}\n        </Phone>\n      </div>\n    )\n  }\n}\n\nexport default Wrapper\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, RouteComponentProps } from '@reach/router';\nimport './index.css';\nimport App from './App';\nimport Wrapper from './components/wrapper';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Wrapper>\n    <App />\n  </Wrapper>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import React, { useReducer, createContext } from \"react\";\n\nimport { IState, IAction } from './interfaces';\n\nconst initialState: IState = {\n  episodes: [],\n  favorites: []\n}\n\nexport const Store = createContext<IState | any>(initialState);\n\nfunction Reducer(state: IState = initialState, action: IAction): IState {\n  switch (action.type) {\n    case \"FETCH_DATA\":\n      return { ...state, episodes: action.payload._embedded.episodes };\n    case \"ADD_FAV\":\n      return { ...state, favorites: action.payload };\n    case \"REMOVE_FAV\":\n      return { ...state, favorites: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport const StoreProvider = ({ children }: any) => {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  console.log(\"state\", state)\n  return <Store.Provider value={{ state, dispatch }}>{children}</Store.Provider>\n}"],"sourceRoot":""}